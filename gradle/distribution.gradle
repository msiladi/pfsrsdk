buildscript {
    apply from: "$rootProject.projectDir/gradle/buildscript.gradle", to: buildscript
}

apply plugin: 'distribution'
apply plugin: 'io.github.http-builder-ng.http-plugin'

import io.github.httpbuilderng.http.HttpTask

File packageFile = buildPackage.outputs.getFiles().getSingleFile()

task uploadPackage(type: HttpTask) {
    dependsOn buildPackage
    config {
        request.uri = nexusContextUrl
        request.auth.basic nexusUser, nexusPassword
        request.contentType = 'application/octet-stream'
    }
    put {
        request.uri.path = "/repository/datascience-r-hosted/src/contrib/${project.ext.packageFileName}"
        request.body = packageFile
        response.success {
            println "Artifact ${project.ext.packageFileName} has been published to ${nexusContextUrl}."
        }
    }
}

distributions {
    docs {
        baseName project.ext.packageDocsName
        contents {
            from {
                new File(project.ext.docsDir)
            }
            into '/'
        }
    }
}

File docsFile = docsDistZip.outputs.getFiles().getSingleFile()

task uploadDocs(type: HttpTask) {
    dependsOn docsDistZip
    config {
        request.uri = nexusContextUrl
        request.auth.basic nexusUser, nexusPassword
        request.contentType = 'application/octet-stream'
    }
    put {
        request.uri.path = "/repository/datascience-docs-hosted/${project.ext.packageName}/${project.ext.packageVersion}/${docsFile.getName()}"
        request.body = docsFile
        response.success {
            println "Artifact ${docsFile.getName()} has been published to ${nexusContextUrl}."
        }
    }
}

tasks.docsDistZip.dependsOn 'pkgdownSite'

task publish {
    dependsOn 'uploadPackage', 'uploadDocs'
}